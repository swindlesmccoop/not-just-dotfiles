#options
set shell zsh
set shellopts '-euy'
set ifs "\n"
set filesep "\n"
set scrolloff 10
set icons
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'

#functions
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
	application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
        text/*|application/json|inode/x-empty) xdg-open "$f" ;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/*) xdg-open "$f" ;;
	audio/*) mpv --audio-display=no $f ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
	application/pgp-encrypted) xdg-open "$f" ;;
	application/zip) xdg-open "$f" ;;
        *) xdg-open "$f" ;;
    esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && xdg-open $fx
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

cmd moveto ${{
	clear; echo "Move to where?"
	read -r tmpdest
	dest="$(echo $tmpdest | sed 's/~/$HOME/')"
	for x in $fx; do
		eval mv -iv \"$x\" \"$dest\"
	done &&
	notify-send "🚚 File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Copy to where?"
	read -r tmpdest
	dest="$(echo $tmpdest | sed 's/~/$HOME/')"
	for x in $fx; do
		eval cp -ivr \"$x\" \"$dest\"
	done &&
	notify-send "📋 File(s) copied." "File(s) copies to $dest."
}}

cmd utftp ${{
	set -x
	clear
	FTP_USER="$(head -n 1 $HOME/.local/share/lftp/credentials)"
	FTP_PASS="$(tail -n 1 $HOME/.local/share/lftp/credentials)"
	ENDPOINT="$(cat $HOME/.local/share/lftp/default_endpoint)"
	lftp $ENDPOINT <<EOF
	user "$FTP_USER" "$FTP_PASS"
	put "$f"
	exit
EOF
	notify-send "🖥️ File uploaded to $ENDPOINT"
}}

cmd setbg "$1"
cmd bulkrename $vidir

#maps
map <c-f> $lf -remote "send $id select '$(fzf)'"
map gh
map gg top
map D delete
map E extract
map C copyto
map M moveto
map <c-n> push :mkdir<space>
map <c-r> reload
map <c-s> set hidden!
map <enter> shell -c xdg-open
map F utftp
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
map A rename # at the very end
map c push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extension
map a push A<a-b> # after extension
map B bulkrename
map b $setbg $f
map <c-c> quit
map <c-e> down
map <c-y> up
map V push :!vim<space>
map W $setsid -f $TERMINAL >/dev/null 2>&1
map Y $printf "%s" "$fx" | xclip -selection clipboard
