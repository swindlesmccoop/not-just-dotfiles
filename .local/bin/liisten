#!/bin/sh

#options
LOOPCOUNT=1 #however many times you want the song to play minus one (for technical reasons)
SONGDIR="$HOME/music/brstm"
cd "$SONGDIR"

#check deps are installed
dependency () {
	printf ""$(echo "\033[31m")"This program requires $1 to run!"$(echo "[0m")"\n"
	[ "$1" = "vgmstream" ] && printf "Please download the following PKGBUILD (if you are on an Arch-based system) to install the necessary utilities.\nhttps://swindlesmccoop.xyz/misc/PKGBUILD\n\n"
	[ "$1" = "mpv" ] && echo "You can install mpv simply through your distribution's package manager. Do note that we will only be using it for audio playback, so a GUI is not required."
}

#play songs in alphabetical order
inorder () {
	SEQNUM=1
	for x in $(seq $(ls -1 | wc -l)); do
		SONG="$(command ls | head -n $SEQNUM | tail -n 1)"
		playsong
		SEQNUM=$(expr $SEQNUM + 1)
	done
}

#play random songs from folder forever
random () {
	while true; do
		RANDNUM=$(shuf -i 1-$(ls -1 | wc -l) -n 1)
		SONG="$(command ls | head -n $RANDNUM | tail -n 1)"
		playsong
	done
}

#pull up fzf and select a song
select () {
	while true; do
		SONG="$(command ls -1 | fzf --layout=reverse)"
		playsong
	done
}

#play one song forever
forever () {
	SONG="$(command ls -1 | fzf --layout=reverse)"
	vgmstream-cli -m "$SONG" > /tmp/brstminfo.txt
	STARTLOOP="$(grep "seconds" /tmp/brstminfo.txt | head -n 1 | sed 's/.*(//' | sed 's/ seconds)//')"
	ENDLOOP="$(grep "seconds" /tmp/brstminfo.txt | tail -n 1 | sed 's/.*(//' | sed 's/ seconds)//')"
	mpv --ab-loop-a="$STARTLOOP" --ab-loop-b="$ENDLOOP" --loop-file=inf "$SONG"
}

#play song stored in var $SONG
playsong () {
	vgmstream-cli -m "$SONG" > /tmp/brstminfo.txt
	STARTLOOP="$(grep "seconds" /tmp/brstminfo.txt | head -n 1 | sed 's/.*(//' | sed 's/ seconds)//')"
	ENDLOOP="$(grep "seconds" /tmp/brstminfo.txt | tail -n 1 | sed 's/.*(//' | sed 's/ seconds)//')"
	mpv --ab-loop-a="$STARTLOOP" --ab-loop-b="$ENDLOOP" --ab-loop-count="$LOOPCOUNT" "$SONG"
	#vgmstream123 -l 2 -f 5 -m "$SONG"
}

liisten_help () {
	printf 'Liisten by swindlesmccoop\n\nusage: liisten -[h, f, io, r, s]\n-h: Print this help message\n-f: Play selected song until user termination\n-io: Play all songs in library in alphabetical order\n-r: Play all songs in library in random order\n-s: Select each song to play\n'
}

[ vgmstream-cli > /dev/null ] || dependency vgmstream
[ mpv > /dev/null ] || dependency mpv
[ "$1" = "" ] && liisten_help
case "$1" in
	-h) liisten_help ;;
	-f) forever ;;
	-io) inorder ;;
	-r) random ;;
	-s) select ;;
esac
